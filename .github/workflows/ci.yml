name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run backend tests
      run: |
        cd backend
        npm test
    
    - name: Run frontend tests
      run: |
        cd frontend
        npm run test:run
    
    - name: Run linting
      run: |
        cd frontend
        npm run lint || echo "No lint script found"
        cd ../backend
        npm run lint || echo "No lint script found"

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build frontend
      run: |
        cd frontend
        npm run build
    
    - name: Build Docker image
      run: |
        docker build -t finance-tracker:latest .
    
    - name: Test Docker image
      run: |
        docker run -d --name test-container -p 3000:3000 finance-tracker:latest
        sleep 10
        curl -f http://localhost:3000/health || exit 1
        docker stop test-container
        docker rm test-container

  deploy:
    needs: [test, build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to production
      run: |
        echo "Deploy to production would happen here"
        echo "This could include:"
        echo "- Pushing to container registry"
        echo "- Deploying to cloud provider"
        echo "- Running database migrations"